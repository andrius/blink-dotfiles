# vim: set fenc=utf-8 ts=2 sw=2 sts=2 et ft=Dockerfile :
FROM ubuntu:20.10

LABEL maintainer="Tine <mentos1386> Jozelj <tine@tjo.space>"
LABEL org.opencontainers.image.source https://github.com/mentos1386/workspace

ARG SSH_USER="${SSH_USER:-tine}"

ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8

SHELL ["/bin/bash", "-c"]

RUN set -ueox pipefail \
&&  DEBIAN_FRONTEND=noninteractive \
&&  apt-get -yqq update \
&&  apt-get -yqq --no-install-recommends --no-install-suggests install \
      ca-certificates \
      locales \
      perl \
      openssh-server \
      psmisc \
&&  sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen \
&&  locale-gen \
&&  adduser --quiet --gecos '' --disabled-password --add_extra_groups "${SSH_USER}" \
&&  apt-get -yqq clean all \
&&  rm -rf /var/lib/apt/lists/* \
           /tmp/* \
           /var/tmp/*

# Configure SSH
RUN touch /etc/ssh/sshd_config.d/custom \
&& echo "PubkeyAuthentication yes" >> /etc/ssh/sshd_config.d/custom \
&& echo "PasswordAuthentication no" >> /etc/ssh/sshd_config.d/custom \
&& echo "UsePAM no" >> /etc/ssh/sshd_config.d/custom \
&& echo "X11Forwarding no" >> /etc/ssh/sshd_config.d/custom

# Install available packages
RUN set -ueox pipefail \
&&  DEBIAN_FRONTEND=noninteractive \
&&  apt-get -yqq update \
&&  apt-get -yqq --no-install-recommends --no-install-suggests install \
      git \
      tmux \
      vim \
      zsh \
&&  apt-get -yqq clean all \
&&  rm -rf /var/lib/apt/lists/* \
           /tmp/* \
           /var/tmp/*

# Install other packages
COPY --from=ghcr.io/mentos1386/starship:0.47.0 /usr/local/bin/starship /usr/local/bin/starship
COPY --from=ghcr.io/mentos1386/kubectl:1.20.0 /usr/local/bin/kubectl /usr/local/bin/kubectl
COPY --from=ghcr.io/mentos1386/glow:1.3.0 /usr/local/bin/glow /usr/local/bin/glow
COPY --from=ghcr.io/mentos1386/mosh:master /usr/local/bin/mosh /usr/local/bin/mosh
COPY --from=ghcr.io/mentos1386/mosh:master /usr/local/bin/mosh-server /usr/local/bin/mosh-server
COPY --from=ghcr.io/mentos1386/mosh:master /usr/local/bin/mosh-client /usr/local/bin/mosh-client
# Golang
COPY --from=golang:1.15.6 --chown=${SSH_USER} /usr/local/go /home/${SSH_USER}/.go
ENV PATH=/home/${SSH_USER}/.go/bin:$PATH
# Rust
COPY --from=rust:1.48.0 --chown=${SSH_USER} /usr/local/cargo /home/${SSH_USER}/.cargo
COPY --from=rust:1.48.0 --chown=${SSH_USER} /usr/local/rustup /home/${SSH_USER}/.rustup
ENV CARGO_HOME=/home/${SSH_USER}/.cargo
ENV RUSTUP_HOME=/home/${SSH_USER}/.rustup
ENV PATH=/home/${SSH_USER}/.cargo/bin:$PATH
# Node
COPY --from=node:15.5.0 --chown=${SSH_USER} /usr/local/bin/node /usr/local/bin/node
# TODO: Add yarbn/npm/npx/yarnpkg??

# Create .dotfiles
COPY --chown=${SSH_USER}:${SSH_USER} dotfiles /home/${SSH_USER}/.dotfiles

# Set ZSH for SSH_USER
RUN chsh -s $(which zsh) ${SSH_USER}

# User Configuration
USER "${SSH_USER}"

# GIT
RUN ln -s /home/${SSH_USER}/.dotfiles/git/gitconfig /home/${SSH_USER}/.gitconfig
# ZSH
RUN ln -s /home/${SSH_USER}/.dotfiles/zsh/zshrc /home/${SSH_USER}/.zshrc
# TMUX
RUN ln -s /home/${SSH_USER}/.dotfiles/tmux/tmux.conf /home/${SSH_USER}/.tmux.conf
# VIM
RUN mkdir -p "/home/${SSH_USER}/.config" \
&&  ln -s "/home/${SSH_USER}/.dotfiles/nvim" "/home/${SSH_USER}/.config/nvim" \
&&  ln -s "/home/${SSH_USER}/.dotfiles/nvim/vimrc" "/home/${SSH_USER}/.vimrc" \
&&  git clone --depth 1 https://github.com/Shougo/dein.vim "/home/${SSH_USER}/.cache/vim/dein/repos/github.com/Shougo/dein.vim" \
&&  vim -V1 -es -i NONE -N --noplugin -u "/home/${SSH_USER}/.config/nvim/config/vimrc" \
      -c "try | call dein#clear_state() | call dein#update() | finally | messages | qall! | endtry"
# SSH
RUN mkdir -p /home/${SSH_USER}/.ssh \
&&  ln -s /home/${SSH_USER}/.dotfiles/ssh/authorized_keys /home/${SSH_USER}/.ssh/authorized_keys

# Start SSH Daemon
USER root
EXPOSE 22/tcp
EXPOSE 22022/udp
RUN mkdir -p /run/sshd
CMD ["/usr/sbin/sshd", "-D", "-e", "-f", "/etc/ssh/sshd_config"]

